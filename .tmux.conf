#===============================================================================
# # Allow for Copying to Clipboard ===============================================
# set this when using TMUX < 1.9 (ex: with TMATE)
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Set global ENV Var for using with Vim/Tmate
# https://github.com/notahat/vim-tmux-navigator/blob/c85dd26ddb3fcb4bbcb09a22a0740d08f2f4d262/README.md#it-doesnt-work-in-tmate
# set-environment -g TMUX_COMMAND tmux

#===============================================================================
# Misc =========================================================================
set -s escape-time 1               # make keys more responsive (from TMUX book)
bind-key l send-keys 'C-l'         # restore 'clear screen' to prefix + l

unbind C-b                         # unbind regular prefix
set -g prefix C-a                  # set prefix to ctrl + a

# https://chris.chowie.net/2015/04/19/True-colour-with-neovim-tmux-and-iterm2/
# http://muddygoat.org/articles/italic-terminal-tmux
set-option -g default-terminal "tmux-256color-italic" #italic output

bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf." # Reload tmux conf. from: https://github.com/philtr/dotfiles/blob/master/tmux/tmux.conf#L12

#===============================================================================
# Session Management ===========================================================
bind-key n new-session -c '/Users/watts'

#===============================================================================
# Window Management ============================================================

# New Window -------------------------------------------------------------------
bind-key c new-window -c '#{pane_current_path}'

# Splits -----------------------------------------------------------------------
bind-key | split-window -h -c '#{pane_current_path}' # vertical split
bind-key - split-window    -c '#{pane_current_path}' # horizontal split

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Window Resizing --------------------------------------------------------------
bind -r H resize-pane -L 5 # prefix + H => Move Left
bind -r J resize-pane -D 5 # prefix + J => Move Down
bind -r K resize-pane -U 5 # prefix + K => Move Up
bind -r L resize-pane -R 5 # prefix + L => Move Righto

set-option -g renumber-windows on # rename window numbers

#===============================================================================
# Vim style Copy Mode: ( prefix + [ ) ==========================================
setw -g mode-keys vi                      # set vi-keys in copy mode
bind-key -t vi-copy v begin-selection     # enable visual mode
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy" # copy on yank
unbind -t vi-copy Enter                   # unbind enter in copy mode
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy" # copy on enter

#===============================================================================
# Mouse Support (iTerm) ========================================================
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

#===============================================================================
# Status Bar ==================================================================
bind-key / set status                    # use Prefix-/ to toggle status bar

set -g status-left-length 100
set -g status-right-length 100
set -g status-utf8 on                    # enable UTF-8 characters in status bar
set -g status-interval 1                 # update once a second

# Colors -----------------------------------------------------------------------
setw -g window-status-current-fg green   # current window text color: green
set -g status-fg white                   # status color: white
set -g status-bg default                 # status bg color: default
set -g status-attr default               # status attribute color: default
#
# setw -g window-status-current-fg red   # current window text color: green
# set -g status-fg black                   # status color: white
# set -g status-bg default                 # status bg color: default
# set -g status-attr default               # status attribute color: default

# Content ----------------------------------------------------------------------
set -g status-left " ⨠  #(whoami) {{#S}} "            # ⨠ thewatts
# set -g status-right "#(cat ~/.thyme-tmux) #[fg=brightcyan][%H:%M]#[fg=default]#(battery -pt) " # thyme time battery
set -g status-right '#[fg=brightyellow]#(~/bin/tmux-spotify-info) #(battery -tp) #[fg=brightyellow]%H:%M#[fg=default]'
setw -g window-status-current-format " ⚫︎ #W {#I} " # current:      ⚫︎ { window name }
setw -g window-status-format " ⚪︎ #W {#I} "         # non-current : ⚪︎ { window name }

set -g status on
set -g status-interval 1
# set -g status-justify "centre" #don't change this spelling
set -g status-position top
set -g allow-rename on

setw -g monitor-activity off
setw -g visual-activity off
setw -g xterm-keys on
setw -g automatic-rename on
setw -g aggressive-resize on

# Tmux-Resurrect
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'

# Tmux Plugin Manager ----------------------------------------------------------
# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  tmux-plugins/tmux-yank           \
"
# # Other examples:
# # github_username/plugin_name    \
# # git@github.com/user/plugin     \
# # git@bitbucket.com/user/plugin  \

# # Initializes TMUX plugin manager.
# # Keep this line at the very bottom of tmux.conf.
run-shell ~/.tmux/plugins/tpm/tpm
